shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
reticulate::repl_python()
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
# Cargar librerías necesarias
if (!require("DBI")) install.packages("DBI")
if (!require("RSQLite")) install.packages("RSQLite")
if (!require("readr")) install.packages("readr")
if (!require("dplyr")) install.packages("dplyr")
if (!require("here")) install.packages("here")
library(DBI)
library(RSQLite)
library(readr)
library(dplyr)
library(here)
# Definir rutas
DATA_DIR <- here("data")
DB_DIR <- here("data", "db")
# Crear directorio para la base de datos si no existe
if (!dir.exists(DB_DIR)) {
dir.create(DB_DIR, recursive = TRUE)
}
# Crear conexión a la base de datos
con <- DBI::dbConnect(RSQLite::SQLite(), file.path(DB_DIR, "db_vulnerabilidad_nal.db"))
# Crear tablas
dbExecute(con, "
CREATE TABLE ENTIDAD (
CVE_ENT TEXT PRIMARY KEY,
NOM_ENT TEXT NOT NULL
)
")
dbExecute(con, "
CREATE TABLE MUNICIPIO (
CVE_MUN TEXT PRIMARY KEY,
NOM_MUN TEXT NOT NULL,
CVE_ENT TEXT NOT NULL,
FOREIGN KEY (CVE_ENT) REFERENCES ENTIDAD(CVE_ENT)
)
")
dbExecute(con, "
CREATE TABLE LOCALIDAD (
CVE_LOC TEXT PRIMARY KEY,
NOM_LOC TEXT NOT NULL,
CVE_MUN TEXT NOT NULL,
POBTOT INTEGER,
deci_lat REAL,
deci_lon REAL,
FOREIGN KEY (CVE_MUN) REFERENCES MUNICIPIO(CVE_MUN)
)
")
dbExecute(con, "
CREATE TABLE SCENARIO (
id_scenario INTEGER PRIMARY KEY,
scenario_name TEXT NOT NULL
)
")
dbExecute(con, "
CREATE TABLE RESULTS (
CVE_LOC TEXT,
id_scenario INTEGER,
Vulnerabilidad REAL,
Adaptabilidad REAL,
Exposicion REAL,
Sensibilidad REAL,
PRIMARY KEY (CVE_LOC, id_scenario),
FOREIGN KEY (CVE_LOC) REFERENCES LOCALIDAD(CVE_LOC),
FOREIGN KEY (id_scenario) REFERENCES SCENARIO(id_scenario)
)
")
# Insertar escenarios
scenarios <- data.frame(
id_scenario = 1:3,
scenario_name = c("historical", "ssp126", "ssp585")
)
dbWriteTable(con, "SCENARIO", scenarios, append = TRUE)
# Función para cargar datos de un escenario
load_scenario_data <- function(file_path, scenario_id) {
# Cargar datos
scenario_data <- read_csv(file_path) %>%
select(CVE_LOC, Vulnerabilidad = tot_vulscore, Adaptabilidad, Exposicion, Sensibilidad) %>%
mutate(id_scenario = scenario_id)
# Insertar en la base de datos
dbWriteTable(con, "RESULTS", scenario_data, append = TRUE)
}
# Cargar datos de características de localidades
locations <- read_csv("/data/vulne_datos_Vulnerabilidad_historica.csv") %>%
select(
CVE_LOC,
NOM_LOC,
NOM_MUN,
NOM_ENT,
POBTOT,
deci_lat,
deci_lon,
CVE_MUN,
CVE_ENT
)
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
# Definir rutas
DATA_DIR <- here("data")
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
shiny::runApp('Proyectos/vulnerability_cc_dash/vulnerability_cc_dash')
remove.packages("promises")
install.packages("promises")
shiny::runApp('Proyectos/MX_Fisheries_DB_2_0/shiny_app')
shiny::runApp('Proyectos/MX_Fisheries_DB_2_0/shiny_app')
shiny::runApp('Proyectos/Tablero BDLP')
shiny::runApp('Proyectos/Tablero BDLP')
runApp('Proyectos/Tablero BDLP')
shiny::runApp('Proyectos/Tablero BDLP')
runApp('Proyectos/Tablero BDLP')
runApp('Proyectos/Tablero BDLP')
runApp('Proyectos/Tablero BDLP')
setwd("~/Proyectos/CEDO/WWF_dashboard")
runApp('')
shiny::runApp()
shiny::runApp()
install.packages("shinycssloaders")
shiny::runApp()
